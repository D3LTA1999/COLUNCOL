{"version":3,"sources":["pages lazy /^/.*$/ groupOptions: {} namespace object","components/core/CoreRouter.tsx","config/API.ts","components/core/CoreNavigationHeader.tsx","components/core/CoreNavigationContent.tsx","components/core/CoreNavigationDrawer.tsx","components/core/CoreAppBar.tsx","App.tsx","serviceWorker.ts","index.tsx","config/store.ts","components/pure/index.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","LazyRoute","item","Loadable","loader","cname","loading","LinearProgress","routeBuilder","key","path","component","routes","CoreRouter","shouldComponentUpdate","render","exact","HomePage","NotFoundPage","React","Component","BASE_URL","window","location","href","includes","BASE_COOKIE_CONFIG","expires","url","dirs","join","APILogout","cookies","remove","loadAreas","a","axios","get","response","data","i","Number","id_area","name","nombre","store","studyAreas","observable","loadSubjects","id_asignatura","hours","Horas","areaId","subjects","loadSchools","id_colegio","abbr","siglas","webPage","pag_web","email","correo","regId","id_registro","schools","loadSchoolRegisters","state","estado","dateA","fecha_asig","dateF","fecha_fin","renov","schoolRegisters","CoreNavigationHeader","nextProps","props","logged","logoutClick","onLogout","username","className","variant","Link","color","onClick","to","CoreNavigationContent","List","ListItem","button","ListItemIcon","Home","ListItemText","primary","Book","School","Person","Face","AttachMoney","Apartment","CoreNavigationDrawer","inject","observer","this","logout","isLogged","auth","Drawer","anchor","classes","paper","Divider","WithStore","CoreAppBar","AppBar","position","Toolbar","App","componentDidMount","loaded","Grid","container","xs","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Store","findArea","find","area","findSubject","subject","findSchool","school","result","teachers","forEach","teacher","toString","reg","admin","computed","action","areaRef","subjectRef","schoolRef","Math","round","random","push","PureTypography","children","PureButton","disabled","PureTextField","value"],"mappings":"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","file":"static/js/main.594dd926.chunk.js","sourcesContent":["var map = {\n\t\"./HomePage\": [\n\t\t52\n\t],\n\t\"./HomePage.tsx\": [\n\t\t52\n\t],\n\t\"./LoginPage\": [\n\t\t86,\n\t\t2\n\t],\n\t\"./LoginPage.tsx\": [\n\t\t86,\n\t\t2\n\t],\n\t\"./NotFoundPage\": [\n\t\t53\n\t],\n\t\"./NotFoundPage.tsx\": [\n\t\t53\n\t],\n\t\"./SchoolsPage\": [\n\t\t85,\n\t\t0\n\t],\n\t\"./SchoolsPage.tsx\": [\n\t\t85,\n\t\t0\n\t],\n\t\"./StudyPlanPage\": [\n\t\t87,\n\t\t1\n\t],\n\t\"./StudyPlanPage.tsx\": [\n\t\t87,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 104;\nmodule.exports = webpackAsyncContext;","import React from 'react';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport HomePage from \"../../pages/HomePage\";\r\nimport NotFoundPage from \"../../pages/NotFoundPage\";\r\nimport Loadable from \"react-loadable\";\r\nimport {LinearProgress} from \"@material-ui/core\";\r\n\r\ntype IRoute = {\r\n    cname: string,\r\n    path: string\r\n};\r\nconst LazyRoute = (item: IRoute) => Loadable({\r\n    loader: () => import(`../../pages/${item.cname}`),\r\n    loading: () => <LinearProgress/>,\r\n});\r\nconst routeBuilder = (item: IRoute) => <Route key={item.path} path={item.path} component={LazyRoute(item)}/>;\r\nconst routes: IRoute[] = [\r\n    {cname: \"LoginPage\", path: \"/login\"},\r\n    {cname: \"StudyPlanPage\", path: \"/study-plan\"},\r\n    {cname: \"SchoolsPage\", path: \"/schools\"},\r\n];\r\n\r\nexport default class CoreRouter extends React.Component {\r\n    shouldComponentUpdate = (): boolean => false;\r\n\r\n    render = () => {\r\n        return (\r\n            <Switch>\r\n                <Route exact path={\"/\"} component={HomePage}/>\r\n                {routes.map(routeBuilder)}\r\n                <Route component={NotFoundPage}/>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n","import axios from \"axios\";\r\nimport cookies from \"js-cookie\";\r\nimport {store} from \"./store\";\r\nimport {observable} from \"mobx\";\r\n\r\ntype Hash = { [x: string]: any }\r\ntype APIResponse =\r\n    { okay: true, payload: Hash } |\r\n    { okay: false, errors: Hash }\r\n\r\nconst BASE_URL = window.location.href.includes(\"localhost\") ? \"http://192.168.99.101:8101/api\" : \"/api\";\r\nconst BASE_COOKIE_CONFIG = {expires: 3};\r\n\r\nconst url = (...dirs: string[]): string => (`${BASE_URL}/${dirs.join(\"/\")}`);\r\nconst withQueryParams = (url: string, query_params: Hash): string => (`${url}?${Object.keys(query_params).map((k) => (`${k}=${query_params[k]}`)).join(\"&\")}`);\r\n\r\nconst APILogout = () => cookies.remove(\"token\", BASE_COOKIE_CONFIG);\r\n\r\nconst loadAreas = async (): Promise<void> => {\r\n    try {\r\n        const response = await axios.get<any[]>(url('getareas.php'));\r\n        const data = response.data.map((i) => ({id: Number(i.id_area), name: i.nombre}));\r\n        store.studyAreas = observable(data);\r\n    } catch (e) {\r\n        store.studyAreas = observable([]);\r\n    }\r\n};\r\n\r\nconst loadSubjects = async (): Promise<void> => {\r\n    try {\r\n        const response = await axios.get<any[]>(url('get_asignaturas.php'));\r\n        const data = response.data.map((i) => ({\r\n            id: Number(i.id_asignatura),\r\n            name: i.nombre,\r\n            hours: Number(i.Horas),\r\n            areaId: Number(i.id_area)\r\n        }));\r\n        store.subjects = observable(data);\r\n    } catch (e) {\r\n        store.subjects = observable([]);\r\n    }\r\n};\r\n\r\nconst loadSchools = async (): Promise<void> => {\r\n    try {\r\n        const response = await axios.get<any[]>(url('get_colegios.php'));\r\n        const data = response.data.map((i) => ({\r\n            id: Number(i.id_colegio),\r\n            name: i.nombre,\r\n            abbr: i.siglas,\r\n            webPage: i.pag_web,\r\n            email: i.correo,\r\n            regId: Number(i.id_registro)\r\n        }));\r\n        store.schools = observable(data);\r\n    } catch (e) {\r\n        store.schools = observable([]);\r\n    }\r\n};\r\n\r\nconst loadSchoolRegisters = async (): Promise<void> => {\r\n    try {\r\n        const response = await axios.get<any[]>(url('get_registros_colegio.php'));\r\n        const data = response.data.map((i) => ({\r\n            id: Number(i.id_registro),\r\n            state: i.estado,\r\n            dateA: i.fecha_asig,\r\n            dateF: i.fecha_fin,\r\n            renov: i.renov,\r\n        }));\r\n        store.schoolRegisters = observable(data);\r\n    } catch (e) {\r\n        store.schoolRegisters = observable([]);\r\n    }\r\n};\r\n\r\nexport {APILogout, loadAreas, loadSubjects, loadSchools, loadSchoolRegisters};\r\n","import React, {Fragment} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {APILogout} from \"../../config/API\";\r\nimport {PureButton, PureTypography} from \"../pure\";\r\n\r\ntype CoreNavigationHeaderProps = {\r\n    logged: boolean,\r\n    username: string,\r\n    onLogout: () => void\r\n}\r\n\r\nexport default class CoreNavigationHeader extends React.Component<CoreNavigationHeaderProps> {\r\n    shouldComponentUpdate = (nextProps: any): boolean => this.props.logged !== nextProps.logged;\r\n\r\n    logoutClick = () => {\r\n        this.props.onLogout();\r\n        APILogout();\r\n    };\r\n\r\n    render = () => {\r\n        const {logged, username} = this.props;\r\n        if (logged) return (\r\n            <Fragment>\r\n                <PureTypography className={\"header-username\"} variant={\"h6\"}>{username}</PureTypography>\r\n                <PureButton component={Link} color={\"secondary\"} onClick={this.logoutClick} to={\"/\"}>\r\n                    cerrar sesion\r\n                </PureButton>\r\n            </Fragment>\r\n        );\r\n        return <PureButton component={Link} color={\"primary\"} to={\"/login\"}>iniciar sesion</PureButton>;\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport {List, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport {Apartment, AttachMoney, Book, Face, Home, Person, School} from \"@material-ui/icons\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\ntype CoreNavigationContentProps = { logged: boolean };\r\n\r\nexport default class CoreNavigationContent extends React.Component<CoreNavigationContentProps> {\r\n    shouldComponentUpdate = (nextProps: any): boolean => this.props.logged !== nextProps.logged;\r\n\r\n    render = () => {\r\n        if (this.props.logged) return (\r\n            <List>\r\n                <ListItem component={Link} to={\"/\"} button>\r\n                    <ListItemIcon><Home/></ListItemIcon>\r\n                    <ListItemText primary={\"Inicio\"}/>\r\n                </ListItem>\r\n                <ListItem component={Link} to={\"/study-plan\"} button>\r\n                    <ListItemIcon><Book/></ListItemIcon>\r\n                    <ListItemText primary={\"P. estudio\"}/>\r\n                </ListItem>\r\n                <ListItem component={Link} to={\"/schools\"} button>\r\n                    <ListItemIcon><School/></ListItemIcon>\r\n                    <ListItemText primary={\"Instituciones\"}/>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <ListItemIcon><Person/></ListItemIcon>\r\n                    <ListItemText primary={\"Profesores\"}/>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <ListItemIcon><Face/></ListItemIcon>\r\n                    <ListItemText primary={\"Estudiantes\"}/>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <ListItemIcon><Book/></ListItemIcon>\r\n                    <ListItemText primary={\"Asignaturas\"}/>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <ListItemIcon><AttachMoney/></ListItemIcon>\r\n                    <ListItemText primary={\"Finanzas\"}/>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <ListItemIcon><Apartment/></ListItemIcon>\r\n                    <ListItemText primary={\"R. Físicos\"}/>\r\n                </ListItem>\r\n            </List>\r\n        );\r\n        return (\r\n            <List>\r\n                <ListItem component={Link} to={\"/\"} button>\r\n                    <ListItemIcon><Home/></ListItemIcon>\r\n                    <ListItemText primary={\"Inicio\"}/>\r\n                </ListItem>\r\n            </List>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Divider, Drawer} from \"@material-ui/core\";\r\nimport CoreNavigationHeader from \"./CoreNavigationHeader\";\r\nimport CoreNavigationContent from \"./CoreNavigationContent\";\r\nimport {WithStore} from \"../../config/store\"\r\nimport {inject, observer} from \"mobx-react\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nexport default class CoreNavigationDrawer extends WithStore {\r\n    render() {\r\n        const {logout, isLogged, auth: {username}} = this.store;\r\n        return (\r\n            <Drawer variant={\"permanent\"} anchor={\"left\"} className={\"drawer\"} classes={{paper: \"paper\"}}>\r\n                <CoreNavigationHeader onLogout={logout} logged={isLogged} username={username}/>\r\n                <Divider/>\r\n                <CoreNavigationContent logged={isLogged}/>\r\n            </Drawer>\r\n        );\r\n    }\r\n}\r\n","import React, {Fragment} from \"react\";\r\nimport {AppBar, Toolbar} from \"@material-ui/core\";\r\nimport {PureTypography} from \"../pure\";\r\n\r\nexport default class CoreAppBar extends React.Component {\r\n    shouldComponentUpdate = (): boolean => false;\r\n\r\n    render = () => {\r\n        return (\r\n            <Fragment>\r\n                <AppBar position={\"fixed\"} className={\"bar\"}>\r\n                    <Toolbar>\r\n                        <PureTypography variant=\"h6\">Coluncol</PureTypography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Toolbar/>\r\n                <Toolbar/>\r\n            </Fragment>\r\n        );\r\n    };\r\n}\r\n","import React from 'react';\nimport './App.scss';\nimport {BrowserRouter} from 'react-router-dom'\nimport CoreRouter from \"./components/core/CoreRouter\";\nimport CoreNavigationDrawer from \"./components/core/CoreNavigationDrawer\";\nimport CoreAppBar from \"./components/core/CoreAppBar\";\nimport {observer, Provider} from \"mobx-react\";\nimport {store} from \"./config/store\";\nimport {Grid, LinearProgress} from \"@material-ui/core\";\nimport {loadAreas, loadSchoolRegisters, loadSchools, loadSubjects} from \"./config/API\";\nimport {observable} from \"mobx\";\n\n@observer\nexport default class App extends React.Component {\n    @observable private loaded = false;\n\n    componentDidMount = async () => {\n        await loadAreas();\n        await loadSubjects();\n        await loadSchools();\n        await loadSchoolRegisters();\n        this.loaded = true;\n    };\n\n    render() {\n        if (!this.loaded) return <LinearProgress/>;\n        return (\n            <BrowserRouter>\n                <Provider store={store}>\n                    <div className=\"App\">\n                        <CoreNavigationDrawer/>\n                        <main className={\"content\"}>\n                            <CoreAppBar/>\n                            <Grid container>\n                                <Grid item xs={12}>\n                                    <CoreRouter/>\n                                </Grid>\n                            </Grid>\n                        </main>\n                    </div>\n                </Provider>\n            </BrowserRouter>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import {action, computed, observable} from \"mobx\";\r\nimport {Component} from \"react\";\r\nimport {StoreProps, StoreType} from \"../store\";\r\n\r\nclass Store {\r\n    @observable auth: AuthInfo = {\r\n        logged: true,\r\n        username: \"ADMIN\",\r\n        admin: false\r\n    };\r\n    @observable schools: School[] = observable([]);\r\n    @observable teachers: Teacher[] = observable([\r\n        {id: 1, name: \"Jose Padilla\"},\r\n        {id: 2, name: \"Luis Potte\"},\r\n        {id: 3, name: \"Diego Albor\"},\r\n    ]);\r\n    @observable studyAreas: StudyArea[] = observable([]);\r\n    @observable subjects: Subject[] = observable([]);\r\n    @observable schoolRegisters: SchoolRegister[] = observable([]);\r\n\r\n    @computed get isLogged(): boolean {\r\n        return this.auth.logged;\r\n    }\r\n\r\n    @computed get isUnlogged(): boolean {\r\n        return !this.auth.logged;\r\n    }\r\n\r\n    @computed get teachersSearchHash(): Hash<Teacher> {\r\n        const result: Hash<Teacher> = {\"0\": {id: 0, name: \"Ninguno\"}};\r\n        this.teachers.forEach((teacher) => result[teacher.id.toString()] = teacher);\r\n        return result;\r\n    }\r\n\r\n    @computed get studyAreasSearchHash(): Hash<StudyArea> {\r\n        const result: Hash<StudyArea> = {\"0\": {id: 0, name: \"Ninguno\"}};\r\n        this.studyAreas.forEach((area) => result[area.id.toString()] = area);\r\n        return result;\r\n    }\r\n\r\n    @computed get subjectsSearchHash(): Hash<Subject> {\r\n        const result: Hash<Subject> = {\"0\": {id: 0, name: \"No existe\", areaId: 1, hours: 0}};\r\n        this.subjects.forEach((subject) => result[subject.id.toString()] = subject);\r\n        return result;\r\n    }\r\n\r\n    @computed get schoolRegisterSearchHash(): Hash<SchoolRegister> {\r\n        const result: Hash<SchoolRegister> = {};\r\n        this.schoolRegisters.forEach((reg) => result[reg.id.toString()] = reg);\r\n        return result;\r\n    }\r\n\r\n    @action login = (username: string) => {\r\n        this.auth = {username, logged: true, admin: true};\r\n    };\r\n\r\n    @action logout = () => this.auth = {username: \"\", logged: false, admin: false};\r\n\r\n    @action updateStudyArea = (area: StudyArea) => {\r\n        const areaRef = this.findArea(area.id);\r\n        if (!areaRef) return;\r\n        areaRef.name = area.name;\r\n    };\r\n\r\n    @action updateSubject = (subject: Subject) => {\r\n        const subjectRef = this.findSubject(subject.id);\r\n        if (!subjectRef) return;\r\n        subjectRef.name = subject.name;\r\n        subjectRef.hours = subject.hours;\r\n        subjectRef.areaId = subject.areaId;\r\n    };\r\n\r\n    @action updateSchool = (school: School) => {\r\n        const schoolRef = this.findSchool(school.id);\r\n        if (!schoolRef) return;\r\n        schoolRef.name = school.name;\r\n        schoolRef.abbr = school.abbr;\r\n        schoolRef.webPage = school.webPage;\r\n        schoolRef.email = school.email;\r\n    };\r\n\r\n    @action addStudyArea = (area: StudyArea) => {\r\n        area.id = Math.round(Math.random() * 10000);\r\n        this.studyAreas.push({id: area.id, name: area.name});\r\n    };\r\n\r\n    @action addSubject = (subject: Subject) => {\r\n        subject.id = Math.round(Math.random() * 10000);\r\n        this.subjects.push({id: subject.id, name: subject.name, hours: subject.hours, areaId: subject.areaId});\r\n    };\r\n\r\n    @action addSchool = (school: School) => {\r\n        school.id = Math.round(Math.random() * 10000);\r\n        this.schools.push({\r\n            id: school.id,\r\n            name: school.name,\r\n            abbr: school.abbr,\r\n            webPage: school.abbr,\r\n            email: school.email,\r\n            regId: 0\r\n        });\r\n    };\r\n\r\n    findArea = (id: number): StudyArea => this.studyAreas.find((area) => area.id === id);\r\n    findSubject = (id: number): Subject => this.subjects.find((subject) => subject.id === id);\r\n    findSchool = (id: number): School => this.schools.find((school) => school.id === id);\r\n}\r\n\r\nclass WithStore<P = {}, S = {}> extends Component<P & StoreProps, S> {\r\n    get store(): StoreType {\r\n        return this.props.store!!;\r\n    }\r\n}\r\n\r\nconst store = new Store();\r\nexport {store, WithStore};\r\n","import React from \"react\";\r\nimport {Button, IconButton, TextField, Typography} from \"@material-ui/core\";\r\nimport {ButtonProps} from \"@material-ui/core/Button\";\r\nimport {TextFieldProps} from \"@material-ui/core/TextField\";\r\nimport {TypographyProps} from \"@material-ui/core/Typography\";\r\nimport {IconButtonProps} from \"@material-ui/core/IconButton\";\r\nimport {KeyboardDatePicker, KeyboardDatePickerProps} from \"@material-ui/pickers\";\r\n\r\ntype Hash = { [x: string]: any };\r\n\r\nclass PureTypography extends React.Component<TypographyProps & Hash> {\r\n    shouldComponentUpdate = (nextProps: Readonly<TypographyProps>): boolean => this.props.children !== nextProps.children;\r\n    render = () => <Typography {...this.props}/>;\r\n}\r\n\r\nclass PureButton extends React.Component<ButtonProps & Hash> {\r\n    shouldComponentUpdate = (nextProps: Readonly<ButtonProps & Hash>): boolean => this.props.disabled !== nextProps.disabled;\r\n    render = () => <Button {...this.props} />;\r\n}\r\n\r\nclass PureTextField extends React.Component<TextFieldProps> {\r\n    shouldComponentUpdate = (nextProps: Readonly<TextFieldProps>): boolean => this.props.value !== nextProps.value;\r\n    render = () => <TextField {...this.props} />;\r\n}\r\n\r\nclass PureIconButton extends React.Component<IconButtonProps> {\r\n    shouldComponentUpdate = (): boolean => false;\r\n    render = () => <IconButton {...this.props}/>;\r\n}\r\n\r\nexport {PureButton, PureTextField, PureTypography, PureIconButton};\r\n","import React, {Fragment} from 'react';\r\nimport {PureTypography} from \"../components/pure\";\r\n\r\nexport default class HomePage extends React.Component {\r\n    shouldComponentUpdate = (): boolean => false;\r\n\r\n    render = () => {\r\n        return (\r\n            <Fragment>\r\n                <PureTypography variant={\"h3\"}>Bienvenido!</PureTypography>\r\n                <PureTypography variant={\"h4\"}>Herramienta de gestión de escuelas COLUNCOL</PureTypography>\r\n            </Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class NotFoundPage extends React.Component {\r\n    // shouldComponentUpdate = (): boolean => false;\r\n\r\n    render = () => {\r\n        return <h1>not found page</h1>\r\n    }\r\n}"],"sourceRoot":""}